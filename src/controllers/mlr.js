const MLR = require('ml-regression-multivariate-linear')
const x2 = [
    /*Se ele jogou a primeira no bloco 1, possiveis futuras jogadas */

    [1, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 1, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 1, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 1, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 1, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 1, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 1, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 1, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 1, 0, 0, 2, 0, 0, 0, 0],
    [1, 0, 1, 0, 2, 0, 0, 0, 0],
    [1, 0, 0, 1, 2, 0, 0, 0, 0],
    [1, 0, 0, 0, 2, 1, 0, 0, 0],
    [1, 0, 0, 0, 2, 0, 1, 0, 0],
    [1, 0, 0, 0, 2, 0, 0, 1, 0],
    [1, 0, 0, 0, 2, 0, 0, 0, 1],
    [1, 1, 2, 1, 2, 0, 0, 0, 0],
    [1, 1, 2, 0, 2, 1, 0, 0, 0],
    [1, 1, 2, 0, 2, 0, 1, 0, 0],
    [1, 1, 2, 0, 2, 0, 0, 1, 0],
    [1, 1, 2, 0, 2, 0, 0, 0, 1],
    [1, 1, 2, 2, 2, 0, 1, 1, 0],
    [1, 1, 2, 2, 2, 0, 1, 0, 1],
    [1, 1, 2, 2, 2, 1, 1, 0, 0],
    [1, 1, 0, 0, 0, 0, 0, 0, 0],
    [1, 0, 0, 1, 0, 0, 0, 0, 0],
    [1, 0, 0, 1, 0, 0, 2, 0, 0],
    [1, 0, 0, 1, 0, 0, 2, 1, 0],
]

const y2 = [
    /*Se ele jogou a primeira no bloco 1 e a segunda em qualquer lugar, possiveis futuras saidas */
    [5],
    [5],
    [5],
    [5],
    [1],
    [5],
    [5],
    [5],
    [5],
    [3],
    [2],
    [7],
    [2],
    [4],
    [7],
    [7],
    [7], /*matei*/
    [7], /*matei*/
    [4],
    [7],/*matei*/
    [7],/*matei*/
    [6],
    [6],
    [8],
    [3],
    [7],
    [8],
    [5],
]

const mlr = new MLR(x2, y2);

exports.getnumber = (req, res) => {
    const vet = req.body.vetor;
    debugger;
    res.status(200).send({
        "message": 'all good here',
        "game": Math.round((mlr.predict(vet)))
    });

}
